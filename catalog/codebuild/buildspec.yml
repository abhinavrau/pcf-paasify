version: 0.2

phases:
  install:
    commands:
      - sudo pip install boto3
      - wget https://releases.hashicorp.com/terraform/0.10.4/terraform_0.10.4_linux_amd64.zip
      - sudo unzip terraform_0.10.4_linux_amd64.zip -d /bin && rm terraform_0.10.4_linux_amd64.zip
      - wget https://github.com/xenolf/lego/releases/download/v1.0.1/lego_v1.0.1_linux_amd64.tar.gz
      - sudo tar xvf lego_v1.0.1_linux_amd64.tar.gz -C /bin && rm lego_v1.0.1_linux_amd64.tar.gz && chmod +x /bin/lego
      - apt-get update
      - apt-cache search source
      - apt-get install -y curl jq
      - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/aws_cred_export.txt # work around https://github.com/hashicorp/terraform/issues/8746
      - echo "Prepare terraform file"
      - cd terraform/aws
      - echo "terraform { " >> provider-output-backend.tf
      - echo "   backend \"s3\" { " >> provider-output-backend.tf
      - echo "   bucket = \"$env.$region.$account.paasify-state\"" >> provider-output-backend.tf
      - echo "   key    = \"terraform.tfstate\"" >> provider-output-backend.tf
      - echo "   region = \"$region\"" >> provider-output-backend.tf
      - echo "  }" >> provider-output-backend.tf
      - echo "}" >> provider-output-backend.tf
      - cat provider-output-backend.tf
      - . /tmp/aws_cred_export.txt && terraform init -input=false
  build:
    commands:
      - . /tmp/aws_cred_export.txt && lego --accept-tos --email="none@paasify.org" -d pcf.$env.$dns_suffix -d *.apps.$env.$dns_suffix -d *.sys.$env.$dns_suffix -d *.uaa.sys.$env.$dns_suffix --dns="route53" run
      - . /tmp/aws_cred_export.txt && TF_VAR_env_name=$env TF_VAR_dns_suffix=$dns_suffix TF_VAR_pivnet_token=$pivnet_token TF_VAR_ssl_cert_path=.lego/certificates/pcf.$env.$dns_suffix.crt TF_VAR_ssl_private_key_path=.lego/certificates/pcf.$env.$dns_suffix.key terraform plan -input=false terraform/aws
  post_build:
    commands:
      - echo "Nothing to do in the post_build for now"
